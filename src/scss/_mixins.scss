$break-xs: 320px;
$break-sm: 480px;
$break-md: 768px;
$break-lg: 992px;
$break-xl: 1200px;
@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}

@mixin responsive($size) {
  @if $media==screen-xs {
    @media only screen and (min-width: $break-xs) {
      @content;
    }
  }
  @else if $media==screen-sm {
    @media only screen and (min-width: $break-sm) {
      @content;
    }
  }
  @else if $media==screen-md {
    @media only screen and (min-width: $break-md) {
      @content;
    }
  }
  @else if $media==screen-lg {
    @media only screen and (min-width: $break-lg) {
      @content;
    }
  }
  @else if $media==screen-xl {
    @media only screen and (min-width: $break-xl) {
      @content;
    }
  }
}

@mixin no-box-shadow() {
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow: inset $top $left $blur $color;
    -moz-box-shadow: inset $top $left $blur $color;
    box-shadow: inset $top $left $blur $color;
  }
  @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
